name: 'Auth management'
description: |-

  Handles authenticate work including login and logout, token refresh and user profile display
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        Handles authenticate work including login and logout, token refresh and user profile display
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a login request.'
      description: |-
        This endpoint allows you to try login.
        Unauthenticated users can't do anything, except try login or register.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: example@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: pa$$word
        type: string
        custom: []
    cleanBodyParameters:
      email: example@example.com
      password: pa$$word
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ [ "token": "[a_JWT_Token]" ] }'
        headers: []
        description: 'valid credentials'
        custom: []
      -
        status: 400
        content: '{ [ ] }'
        headers: []
        description: 'invalid credentials'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/refresh
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        Handles authenticate work including login and logout, token refresh and user profile display
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh token.'
      description: 'This endpoint try to refresh JWT Token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "[a_refresh_JWT_Token]" }'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{ [ ] }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        Handles authenticate work including login and logout, token refresh and user profile display
      subgroup: ''
      subgroupDescription: ''
      title: Logout.
      description: |-
        This endpoint try logout the authenticated user.
        If an error occurs with the token, the authenticated user will be logout anyway.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ [ "message": "logged out" ] }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fvPa3aegEc18bZD4hkVd566'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: 'Auth management'
      groupDescription: |-

        Handles authenticate work including login and logout, token refresh and user profile display
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user data.'
      description: 'This endpoint shows infos about authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "name": "example",
           "email": "exampleuser@example.com",
           "password": "[some_hash_password]",
           "isAdmin": false,
           "resourcePermissions": [],
           "created_at": "2040-01-01",
           "updated_at": "2040-01-01"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{ [ ] }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5D6b4aaEPe3V861gdhcfZkv'
    controller: null
    method: null
    route: null
    custom: []
